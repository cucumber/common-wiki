Communication within a team always works better when people can use their spoken language. Cucumber supports around "40 spoken languages":http://github.com/aslakhellesoy/cucumber/blob/master/lib/cucumber/languages.yml. and the number is steadily growing. This is Norwegian:

<pre><code># language: no
Egenskap: Summering
  For å ungå at firmaet går konkurs
  Må regnskapsførerere bruke en regnemaskin for å legge sammen

  Scenario: to tall
    Gitt at jeg har tastet inn 5
    Og at jeg har tastet inn 7
    Når jeg summerer
    Så skal resultatet være 12

  Scenario: tre tall
    Gitt at jeg har tastet inn 5
    Og at jeg har tastet inn 7
    Og at jeg har tastet inn 1
    Når jeg summerer
    Så skal resultatet være 13
</code></pre>

A <code># language:</code> header on the first line of a feature file tells Cucumber what spoken language to use - for example <code># language: fr</code> for French. If you omit this header, Cucumber will default to English (en).

h2. Listing the available languages

<pre><code>cucumber --language help</code></pre>

*{color:red}From version 0.5.0 you must use:*
<pre><code>cucumber --i18n help</code></pre>

h2. Listing the keywords of a particular language

For example Russian:

<pre><code>cucumber --language ru help</code></pre>

*{color:red}From version 0.5.0 you must use:*
<pre><code>cucumber --i18n ru</code></pre>

h2. Adding a new language

(or completing an existing one). It's easy! 

# Make a fork of Cucumber and pull it down
# Add your language's keywords to  "languages.yml":http://github.com/aslakhellesoy/cucumber/blob/master/lib/cucumber/languages.yml
# Commit and push your changes - then send a pull request at GitHub.

Alternatively - if you don't know Git and just grabbed the Gem:

# Edit the <code>languages.yml</code> in your gem.
# [[Get in touch]] and attach the updated <code>languages.yml</code> to a new Lighthouse ticket.

That's it! You have a new language that you can specify in a <code># language: xx</code> header in your feature files.

h2. Adding examples for a new language

Just copy the <code>examples/i18n/en</code> example to a new directory with the same name as the language you added.
Then translate everything in there. When you're done you should be able to run <code>rake i18n</code> from the <code>examples/i18n</code> directory. If you want this code back into the official source you have to do those changes in your
own cloned Git repo.