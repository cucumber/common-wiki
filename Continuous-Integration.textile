Using Cucumber in a "Continuous Integration":http://martinfowler.com/articles/continuousIntegration.html (CI) environment is relatively straightforward.

The <code>cucumber</code> executable will exit with an "exit status":http://en.wikipedia.org/wiki/Exit_status different from 0 if one or more scenarios are failing, and this is all your CI server needs to know.

First, you have to make sure your CI server executes cucumber. Most CI setups invoke some kind of build tool, typically "Rake":http://rake.rubyforge.org/, "Ant":http://ant.apache.org/ or "Maven":http://maven.apache.org/ and we recommend you execute cucumber from one of these.

h2. Rake

If your CI server is [[using Rake]], just make sure it executes your cucumber task.

h2. Ant, Maven and JUnit output

Many CI servers can interpret XML files produced by the "Ant JUnit task":http://ant.apache.org/manual/OptionalTasks/junit.html and display them as HTML. Some can even create reports over time.

If you're using such a CI server we recommend you use Cucumber with the <code>junit</code> formatter.

If you're using Ant, you can run cucumber with the "exec":http://ant.apache.org/manual/CoreTasks/exec.html task. If you're using JRuby or "cuke4duke":http://wiki.github.com/aslakhellesoy/cuke4duke you can also take a peek at cuke4duke's "Ant documentation":http://wiki.github.com/aslakhellesoy/cuke4duke/ant

If you're using Maven, we recommend you follow cuke4duke's "Maven documentation":http://wiki.github.com/aslakhellesoy/cuke4duke/maven
