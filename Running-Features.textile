There are several ways to run your features. This page lists the most common ones.

h2. Using the Gem's 'cucumber' Command

Assuming you've installed cucumber as a gem, run this at a command prompt to see the options for running features:

<pre><code>cucumber --help</code></pre>

For example

<pre><code>cucumber features/authenticate_user.feature --line 44 --format html > features.html</code></pre>

...will run the scenario defined at line 44 of the authenticate_user feature, format it as HTML and pipe it to the features.html file for viewing in a browser.

h3. Defining 'profiles'

Profiles allow you to store and reuse commonly used cucumber arguments for a project in a cucumber.yml file.  For example, by having this in your cucumber.yml at your project root:

<pre><code>default: --format profile features
html_report: --format progress --format html --out=features_report.html features  
</code></pre>

You can reuse the arguments listed above:
<pre><code>cucumber --profile html_report
</code></pre>

It is important to point out that by simply running 'cucumber' the default profile will be used (if a cucumber.yml file is found).

h2. Using Rake

<pre><code>rake features</code></pre>

This requires a Rakefile with a Cucumber task definition. For example:

<pre><code>require 'rubygems'
require 'cucumber/rake/task'

Cucumber::Rake::Task.new(:features) do |t|
  t.cucumber_opts = "--format pretty"
  t.rcov = true
end
</code></pre>

If you are using [[Ruby on Rails]] this task is defined for you already.

h2. Using TextMate

See the "Cucumber.tmbundle":http://github.com/bmabey/cucumber-tmbundle documentation

h2. Using Ant

TODO: Show a simple task

h2. Using Maven

TODO: Show a simple task
