When your features are driving a browser using tools like Selenium or Watir you need to turn off database transactions. 

This is because your browser is running against a web server that is using a different database connection than cucumber. This is because they run in separate processes. Since they have two different connections, if transactions are on, the web server's connection can't see the data modified by the cucumber connection before its transaction is committed. With transactions on, transactions are *never* are never committed to the database (but rolled back at the end of each scenario). Therefore, the web server's connection will never see data from cucumber, and therefore your browser won't either.

If you're using [[Ruby on Rails]] it's easy to turn of transactions for a feature or particular scenarios (if you're on 0.3.103 or above), just use the <code>@no-txn</code> tag, e.g.

<pre>
@no-txn
Feature: Lots of scenarios with transactions off.
</pre>

or

<pre>
Feature: ...
  @no-txn
  Scenario: One scenario with transactions off.
</pre>

h2. Cleaning Your Database

Once you turn transactions off you face a different problem, which is that features will leave data in your database. If you're using [[Ruby on Rails]], a good tool to deal with this is Ben Mabey's "Database Cleaner":http://wiki.github.com/aslakhellesoy/cucumber/browsers-and-transactions gem which you can install with <code>gem install bmabey-database_cleaner --source http://gems.github.com/<code>. You can use this very effectively with the <code>@no-txn</code> tag. Something like the following somewhere in e.g. <code>features/support/db_cleaner.rb</code> should work well:

<pre>
require 'database_cleaner'
DatabaseCleaner.clean_with :truncation # clean once to ensure clean slate

Before('@no-txn') do
  DatabaseCleaner.strategy = :truncation
  DatabaseCleaner.start
end

After('@no-txn') do
  DatabaseCleaner.clean
  DatabaseCleaner.strategy = :transaction
end
</pre>

If you're not using Rails, writing something similar should be fairly easy.