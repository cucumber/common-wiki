Tags is a great way to organise your features and scenarios. Consider this example:

<pre>
@billing
Feature: Verify billing

  @important
  Scenario: Missing product description

  Scenario: Several products
</pre>

A Scenario or feature can have as many tags as you like. Just separate them with spaces:

<pre>
@billing @bicker @annoy
Feature: Verify billing
</pre>

You can use the <code>--tags</code> option to tell Cucumber that you only want to run features or scenarios that have (or don't have) certain tags. Examples:

<pre>
cucumber --tags @billing            # Runs both scenarios
cucumber --tags @important          # Runs the first scenario
cucumber --tags ~@important         # Runs the second scenario (Scenarios without @important)

cucumber --tags @billing --tags @important # Runs both scenarios (Scenarios with @important OR @billing)
cucumber --tags @billing,@important           # Runs the first scenario (Scenarios with @important AND @billing)
</pre>

(Another way to "filter" what you want to run is to use the <code>file.feature:line</code> pattern or the <code>--scenario</code> option as described in [[Running Features]]).

Tags is also a great way to "link" your Cucumber features to other documents. For example, if you have to deal with old school requirements in a different system (Word, Excel, a wiki) you can refer to numbers:

<pre>
@BJ-x98.77 @BJ-z12.33
Feature: Convert transaction
</pre>

Another creative way to use tags is to keep track of where in the development process a certain feature is:

<pre>
@qa_ready
Feature: Index projects
</pre>

Tags are also used in Tagged [[Hooks]], which let you use tags to define what <code>Before</code> and <code>After</code> blocks get run for what scenarios.

h2. Tag limits and WIP

If you're following Kanban principles, you want to limit the work in progress (WIP). The idea is that the fewer features or scenarios that being worked on simultaneously, the quicker you'll be able to implement new features.

Cucumber can enforce this using tag limits. Here is an example:

<pre>
cucumber --tags @dev:2,@qa:3
</pre>

This will make cucumber fail if you have more than 2 <code>@dev</code> tags or more than 3 <code>@qa</code> tags, even if each of your scenarios pass individually.

Used in conjunction with the <code>--wip</code> switch you can set up your project to enforce the WIP limits of your team.