The public API for Cucumber's formatters is defined by all the methods in the <code>Cucumber::Ast::Visitor</code> class, which you should use as your base class.

If you want to write your own custom formatter, just subclass <code>Cucumber::Ast::Visitor</code>. Maybe you want to create a formatter that posts a message to Twitter every time a step fails? (I'm sure that would get you a lot of followers).

Here is how you'd do that:

Save your custom formatter class in <code>features/support</code> (or if you want to put it elsewhere, put a file in that directory that <code>require</code>s your formatter class).

<pre>
# features/support/twitter_formatter.rb
require 'rubygems'
require 'twitter'

module Silly
  class TwitterFormatter < Cucumber::Ast::Visitor
    def initialize(step_mother, io, options)
      super(step_mother)
      # We don't care about these - we're just twittering!
    end

    def visit_step_name(keyword, step_match, status, source_indent, background)
      if status == :failed
        step_name = step_match.format_args(lambda{|param| "*#{param}*"})
        message = "#{step_name} FAILED"
        Twitter::Base.new('your email', 'your password').post(message)
      end
    end
  end
end
</pre>

Now you can run your features by passing <code>--format Silly::TwitterFormatter</code> to the <code>cucumber</code> command line, Rake task or even in <code>cucumber.yml</code> - see [[Running Features]] for all the options. You have more methods available than the ones used in this awesome example (but you only need to implement the ones you care about). Look at the sources for some of Cucumber's built-in formatters to discover more methods.

h2. If your formatter can't be found

If cucumber complains that it can't find your formatter, add an explicit <code>--require dir</code>, where <code>dir</code> is a parent directory of your formatter. You can also pass the full path to the ruby file where the formatter is defined.

h2. Other Formatters

# "TeamCityFormatter:":http://github.com/darrell/cucumber_teamcity/ prints cucumber results in a format for interpretation by a "TeamCity":http://www.jetbrains.com/teamcity/index.html  build agent
# "TextmateFormatter:":http://github.com/raldred/cucumber_textmate/ prints cucumber results as HTML with enhanced styling and Javascript for Textmate