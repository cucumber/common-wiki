Cucumber provides a number of hooks which allow us to run blocks at various points in the Cucumber test cycle. You can put them in your <code>support/env.rb</code> file or any other file under the <code>support</code> directory, for example in a file called <code>support/hooks.rb</code>. There is no association between where the hook is defined and which scenario/step it is run for, but you can use tagged hooks (see below) if you want more fine grained control.

All defined hooks are run whenever the relevant event occurs. For example all <code>Before</code> hooks defined throughout the required code will be run before the first step of each scenario.

h2. Scenario hooks

<pre><code>Before do
  # Do something before each scenario.
end
</code></pre>

<pre><code>After do |scenario|
  # Do something after each scenario.
  # The +scenario+ argument is optional, but
  # if you use it, you can inspect status with
  # the #failed?, #passed? and #exception methods.

  if(scenario.failed?)
    subject = "[Project X] #{scenario.exception.message}"
    send_failure_email(subject)
  end
end
</code></pre>

h2. Global hooks

If you want something to happen once before any scenario is run - just put that code at the top-level in your <code>env.rb</code> file (or any other file in your <code>features/support</code> directory. Use <code>Kernel#at_exit</code> for global teardown. Example:

<pre><code>my_heavy_object = HeavyObject.new
my_heavy_object.do_it

at_exit do
  my_heavy_object.undo_it
end
</code></pre>

h2. Tagged hooks

Sometimes you may want a certain before or after hook to run only for certain scenarios. This can be achieved by associating a hook with one or more [[tags]]. Example:

<pre><code>Before('@cucumis', '@sativus') do
  # This will only run before scenarios tagged
  # with @cucumis or @sativus.
end
</code></pre>

Think twice before you use this feature, as whatever happens in hooks is invisible to people who only read the features. You should consider using [[background]] as a more explicit alternative if the setup should be readable by non-technical people. 